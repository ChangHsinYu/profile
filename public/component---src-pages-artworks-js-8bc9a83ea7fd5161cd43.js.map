{"version":3,"file":"component---src-pages-artworks-js-8bc9a83ea7fd5161cd43.js","mappings":"4JAEkD,IAE5CA,EAAO,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA0BX,OA1BWC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACZC,OAAA,WACC,OACMC,EAAAA,EAAAA,IAAA,OAAKC,UAAU,SAEbD,EAAAA,EAAAA,IAACE,EAAAA,GAAI,CAACC,GAAIC,KAAKC,MAAMF,KAC1BH,EAAAA,EAAAA,IAAA,OAAKC,UAAU,aACbD,EAAAA,EAAAA,IAACM,EAAAA,EAAW,CAACC,MAAOH,KAAKC,MAAMG,IAAKC,MAAO,CAACC,MAAM,OAAQC,OAAO,QAASC,IAAI,eAI3EZ,EAAAA,EAAAA,IAAA,OAAKC,UAAU,oBAClBD,EAAAA,EAAAA,IAAA,QAAMS,MAAO,CAACI,WAAW,QAAST,KAAKC,MAAMS,OAAc,KAAEV,KAAKC,MAAMU,SAAS,KAAGX,KAAKC,MAAMW,OAG5FhB,EAAAA,EAAAA,IAAA,MAAIC,UAAU,aACjBD,EAAAA,EAAAA,IAAA,MAAIS,MAAO,CAACI,WAAW,QAAST,KAAKC,MAAMS,OAAMd,EAAAA,EAAAA,IAAA,YAAMA,EAAAA,EAAAA,IAAA,aACvDA,EAAAA,EAAAA,IAAA,UAAKI,KAAKC,MAAMU,UAASf,EAAAA,EAAAA,IAAA,aACzBA,EAAAA,EAAAA,IAAA,UAAKI,KAAKC,MAAMW,QAElBhB,EAAAA,EAAAA,IAAA,MAAIC,UAAU,cACZD,EAAAA,EAAAA,IAAA,UAAKI,KAAKC,MAAMY,QAKtB,EAACxB,CAAA,CA1BW,CAASyB,EAAAA,WA6BtB,K,uEC3BA,MAAMC,EAAW,CAChB,yBACA,aACA,SACA,sBACA,OACA,2BACA,QACA,UACA,WACA,UACA,sBACA,iBAuCD,UA1BiBC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACpBpB,EAAAA,EAAAA,IAACsB,EAAAA,EAAM,CAACC,UAAU,4BAClBvB,EAAAA,EAAAA,IAAA,OAAKC,UAAU,aACZkB,EAASK,KAAI,CAACC,EAAGC,KAChB,MAAMC,EAdhB,SAAmBC,EAAOd,GACzB,IAAK,IAAIe,EAAI,EAAGA,EAAID,EAAME,OAAQD,GAAK,EAAG,CACzC,MAAM,KAAEF,GAASC,EAAMC,GACvB,GAAIF,EAAKI,YAAYjB,OAASa,EAAKI,YAAYjB,QAAUA,EACxD,OAAOa,CAET,CACA,OAAO,CACR,CAMuBK,CAAUX,EAAKY,kBAAkBL,MAAOH,GACnDS,EAAOP,EAAOA,EAAKQ,OAAOC,KAAO,GAClC5B,EAAMmB,EAAKI,YAAYM,cAAcC,gBAAgBC,gBACtD,OACEvC,EAAAA,EAAAA,IAAA,OAAKwC,IAAKf,IACRzB,EAAAA,EAAAA,IAACP,EAAAA,EAAO,CACVqB,MAAOa,EAAKI,YAAYjB,MACxBC,SAAUY,EAAKI,YAAYhB,SAC3BC,KAAMW,EAAKI,YAAYf,KACvBC,MAAOU,EAAKI,YAAYd,MACxBT,IAAKA,EACLL,GAAI+B,EACJR,MAAOA,KAEIP,EAASW,OAAa,IAC3B,KAIH,C","sources":["webpack://profile/./src/components/artwork.js","webpack://profile/./src/pages/artworks.js"],"sourcesContent":["import React from 'react';\nimport { Link }from 'gatsby-link';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nclass Artwork extends React.Component {\n\trender() {\n\t\treturn (\n        <div className=\"work\">\n\n          <Link to={this.props.to}>\n\t\t\t\t\t<div className=\"work_img\">\n\t\t\t\t\t\t\t<GatsbyImage image={this.props.img} style={{width:'100%', height:'100%'}} alt='artwork'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\n          <div className=\"work_inf_mobile\">\n\t\t\t\t\t\t\t<span style={{fontWeight:'700'}}>{this.props.title}</span>, {this.props.category}, {this.props.date}\n\t\t\t\t\t</div>\n\n          <ul className=\"work_inf\">\n\t\t\t\t\t\t\t<li style={{fontWeight:'700'}}>{this.props.title}<br /><br /></li>\n\t\t\t\t\t\t\t<li>{this.props.category}<br /></li>\n\t\t\t\t\t\t\t<li>{this.props.date}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul className=\"work_inf2\">\n\t\t\t\t\t\t\t<li>{this.props.event}</li>\n\t\t\t\t\t</ul>\n\n        </div>\n\t\t);\n\t}\n}\n\nexport default Artwork;\n","import React from 'react';\nimport { graphql } from \"gatsby\"\nimport './artworks.css';\nimport Artwork from '../components/artwork';\nimport Layout from '../components/layout'\n\nconst artworks = [\n\t\"Vibration of Ink Fluid\",\n\t\"Tree Noise\",\n\t\"Portal\",\n\t\"Listen to the Light\",\n\t\"Soul\",\n\t\"&#x611b (online version)\",\n\t\"Cross\",\n\t\"&#x611b\",\n\t\"Cyberfly\",\n\t\"Feeding\",\n\t\"Stairway to Nothing\",\n\t\"Couldn't Find\",\n];\n\nfunction findTitle(edges, title) {\n\tfor (let i = 0; i < edges.length; i += 1) {\n\t\tconst { node } = edges[i];\n\t\tif (node.frontmatter.title && node.frontmatter.title === title) {\n\t\t\treturn node;\n\t\t}\n\t}\n\treturn 0;\n}\n\nconst Artworks = ({ data }) =>  (\n      <Layout pageTitle=\"chang hsin-yu 張欣語 works\">\n      <div className=\"work_main\">\n        {artworks.map((p, index) => {\n          const node = findTitle(data.allMarkdownRemark.edges, p);\n\t\t\t\t  const dest = node ? node.fields.slug : '';\n\t\t\t\t\tconst img = node.frontmatter.featuredImage.childImageSharp.gatsbyImageData;\n          return (\n            <div key={p}>\n              <Artwork\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={node.frontmatter.title}\n\t\t\t\t\t\t\t\t\t\t\t\tcategory={node.frontmatter.category}\n\t\t\t\t\t\t\t\t\t\t\t\tdate={node.frontmatter.date}\n\t\t\t\t\t\t\t\t\t\t\t\tevent={node.frontmatter.event}\n\t\t\t\t\t\t\t\t\t\t\t\timg={img}\n\t\t\t\t\t\t\t\t\t\t\t\tto={dest}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t/>\n              {index < artworks.length - 1 ? '': ''}\n            </div>\n\t\t\t\t          );\n        })}\n      </div>\n      </Layout>\n);\n\nexport default Artworks;\n\nexport const query = graphql`{\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date\n          category\n          event\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        fields {\n          slug\n        }\n        excerpt\n      }\n    }\n  }\n}`\n"],"names":["Artwork","_React$Component","apply","arguments","_inheritsLoose","prototype","render","___EmotionJSX","className","Link","to","this","props","GatsbyImage","image","img","style","width","height","alt","fontWeight","title","category","date","event","React","artworks","_ref","data","Layout","pageTitle","map","p","index","node","edges","i","length","frontmatter","findTitle","allMarkdownRemark","dest","fields","slug","featuredImage","childImageSharp","gatsbyImageData","key"],"sourceRoot":""}